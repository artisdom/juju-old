#!/usr/bin/env bash
#
# This file is part of JuJu: The universal GNU/Linux package manager
#
# Copyright (c) 2012-2013 Filippo Squillace <feel.squally@gmail.com>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

########################### MAIN VARIABLES ENVIRONMENT #################################

[ -z "$JUJU_PACKAGE_HOME" ] && JUJU_PACKAGE_HOME="$HOME/.juju"
JUJU_PACKAGE_HOME=$(readlink -f $JUJU_PACKAGE_HOME)
mkdir -p $JUJU_PACKAGE_HOME

export PATH=${HOME}/.jujup/bin:$JUJU_PACKAGE_HOME/root/usr/local/bin:$JUJU_PACKAGE_HOME/root/usr/bin:$JUJU_PACKAGE_HOME/root/bin:$JUJU_PACKAGE_HOME/root/usr/local/sbin:$JUJU_PACKAGE_HOME/root/usr/sbin:$JUJU_PACKAGE_HOME/root/sbin:$PATH

########################### IMPORTS ####################################################

# Define the variables for the dependency commands which, awk
if [ "$0" == "-bash" ]
then
    # it is called by using source ...
    source "$(dirname ${BASH_ARGV[0]})/../lib/juju/essentials.sh"
else
    set -e
    source "$(dirname $0)/../lib/juju/essentials.sh"
fi

########################## OTHER VARIABLES ENVIRONMENT #########################

export MANPATH=$MANPATH:$JUJU_PACKAGE_HOME/root/usr/share/man

# Update runtimepath variable
function vim(){
    if ls -d $JUJU_PACKAGE_HOME/root/usr/share/vim/* &> /dev/null; then
        local vimpaths=$(ls -d $JUJU_PACKAGE_HOME/root/usr/share/vim/* | $AWK 'BEGIN{ORS=","}{print $0}')
        local vimafterpaths=""
        if ls -d $JUJU_PACKAGE_HOME/root/usr/share/vim/*/after &> /dev/null; then
            vimafterpaths=$(ls -d $JUJU_PACKAGE_HOME/root/usr/share/vim/*/after | $AWK 'BEGIN{ORS=","}{print $0}')
        fi
        $($WHICH vim) -c "set runtimepath+=$vimpaths" -c "set runtimepath+=$vimafterpaths" $@
    else
        $($WHICH vim) $@
    fi
}


# Update PYTHONPATH variable
if ls -d $JUJU_PACKAGE_HOME/root/usr/lib/python* &> /dev/null; then
    pypaths=$(ls -d $JUJU_PACKAGE_HOME/root/usr/lib/python*/site-packages | $AWK 'BEGIN{ORS=":"}{print $0}')
    export PYTHONPATH=$PYTHONPATH:$pypaths
    unset pypaths
fi


function preexec(){
# Prepare the given command and execute it
#
# $@: command
#
    sudo_cmd=false
    if [ "$1" == "sudo" ]; then
        shift
        sudo_cmd=true
    fi

    if [ "$(type -t $1)" != "file" ]; then
        $@
        return
    fi

    # Get the command and check where it is located
    cmd=$($WHICH $1 2> /dev/null )

    shift
    if [[ $cmd =~ $JUJU_PACKAGE_HOME   ]]; then
        cmd="$(get_loader) $cmd"
    fi

    if $sudo_cmd
    then
        su -p -c "$cmd $@"
    else
        $cmd $@
    fi
}

preexec $@

trap 'preexec $BASH_COMMAND' DEBUG

